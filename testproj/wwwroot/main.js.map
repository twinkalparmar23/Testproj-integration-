{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employee-add/employee-add.component.css","webpack:///./src/app/employee-add/employee-add.component.html","webpack:///./src/app/employee-add/employee-add.component.ts","webpack:///./src/app/employee-edit/employee-edit.component.css","webpack:///./src/app/employee-edit/employee-edit.component.html","webpack:///./src/app/employee-edit/employee-edit.component.ts","webpack:///./src/app/employee-list/employee-list.component.css","webpack:///./src/app/employee-list/employee-list.component.html","webpack:///./src/app/employee-list/employee-list.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/service/employee.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<html>\\r\\n<head>\\r\\n  <title>Bootstrap Example</title>\\r\\n  <meta charset=\\\"utf-8\\\">\\r\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\r\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\">\\r\\n  <script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\\\"></script>\\r\\n  <script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\\\"></script>\\r\\n</head>\\r\\n<body>\\r\\n  <nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"navbar-header\\\">\\r\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Employee System</a>\\r\\n      </div>\\r\\n      <ul class=\\\"nav navbar-nav\\\">\\r\\n        <li><a [routerLink]=\\\"['/home']\\\">Home</a></li>\\r\\n        <li><a [routerLink]=\\\"['/employee-list']\\\">Employee list</a></li>\\r\\n        <li><a [routerLink]=\\\"['/employee-add']\\\">Add Employee</a></li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n</html>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    constructor(private _httpService: Http) { }\r\n    apiValues: string[] = [];\r\n    ngOnInit() {\r\n       \r\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { EmployeeAddComponent } from './employee-add/employee-add.component';\nimport { EmployeeEditComponent } from './employee-edit/employee-edit.component';\n\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      HomeComponent,\n      EmployeeListComponent,\n      EmployeeAddComponent,\n      EmployeeEditComponent\n  ],\n  imports: [\n      BrowserModule,\n      RouterModule.forRoot([\n          { path: 'home', component: HomeComponent },\n          { path: '', redirectTo: 'home', pathMatch: 'full' },\n          { path: 'employee-list', component: EmployeeListComponent },\n          { path: 'employee-add', component: EmployeeAddComponent },\n          { path: 'employee-edit/:id', component: EmployeeEditComponent },\n          \n      ]),\n      FormsModule,\r\n      HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h3 >\\n  Add Employee Data\\n</h3>\\n\\n<form #form=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"onSubmit(form.value)\\\">\\n\\n    <label for=\\\"firstname\\\">First name:</label><br>\\n\\t\\t<input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"model.firstName\\\">\\n\\t\\t<br><br>\\n\\t\\t\\n\\t\\t<label for=\\\"lastname\\\">Last name:</label><br>\\n\\t\\t<input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"model.lastName\\\">\\n\\t\\t<br><br>\\n\\n    <label for=\\\"adress\\\">Address:</label><br>\\n\\t\\t<input type=\\\"text\\\" name=\\\"adress\\\" [(ngModel)]=\\\"model.adress\\\">\\n\\t\\t<br><br>\\n\\n    <label for=\\\"contact\\\">Contact:</label><br>\\n\\t\\t<input type=\\\"text\\\" name=\\\"contact\\\" [(ngModel)]=\\\"model.contact\\\">\\n\\t\\t<br><br>\\n\\n    <label for=\\\"gender\\\">Gender:</label><br>\\n\\t\\t<input type=\\\"text\\\" name=\\\"gender\\\" [(ngModel)]=\\\"model.gender\\\">\\n\\t\\t<br><br>\\n    <button type=\\\"submit\\\"  class=\\\"btn btn-primary\\\">Submit</button>\\n<form>\\n\"","import { Component, OnInit,Input } from '@angular/core';\nimport { ActivatedRoute,Router } from '@angular/router';\n//import { EmployeeService} from '../service/employee.service';\nimport { IEmployee, Employee } from '../service/employee.model';\nimport { Http } from '@angular/http';\n\n@Component({\n  selector: 'app-employee-add',\n  templateUrl: './employee-add.component.html',\n  styleUrls: ['./employee-add.component.css']\n})\nexport class EmployeeAddComponent implements OnInit {\n\n    constructor(private _httpService: Http, private route:ActivatedRoute,private router:Router) { }\n\n  model=new Employee();\n  //@Input() empData: Employee[];\n  ngOnInit() {\n  }\n\n  onSubmit(form:any){\n     \n      //console.log(this.model);\n      this._httpService.post('/api/values',this.model).subscribe();   \n      this.router.navigate(['/employee-list']);\n\n    /*this._employeeService.addEmployee(this.model).then((result) => {\n    this.router.navigate(['/employee']);\n    console.log(result)\n   });*/\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h3 >\\n Edit Employee Data\\n</h3>\\n\\n<form #form=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"onSubmit(form.value)\\\">\\n\\n    <label for=\\\"firstname\\\">First name:</label><br>\\n\\t\\t<input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"model.firstName\\\">\\n\\t\\t<br><br>\\n\\t\\t\\n\\t\\t<label for=\\\"lastname\\\">Last name:</label><br>\\n\\t\\t<input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"model.lastName\\\">\\n\\t\\t<br><br>\\n\\n    <label for=\\\"adress\\\">Address:</label><br>\\n\\t\\t<input type=\\\"text\\\" name=\\\"adress\\\" [(ngModel)]=\\\"model.adress\\\">\\n\\t\\t<br><br>\\n\\n    <label for=\\\"contact\\\">Contact:</label><br>\\n\\t\\t<input type=\\\"text\\\" name=\\\"contact\\\" [(ngModel)]=\\\"model.contact\\\">\\n\\t\\t<br><br>\\n\\n    <label for=\\\"gender\\\">Gender:</label><br>\\n\\t\\t<input type=\\\"text\\\" name=\\\"gender\\\" [(ngModel)]=\\\"model.gender\\\">\\n\\t\\t<br><br>\\n\\n    <button type=\\\"submit\\\"  class=\\\"btn btn-primary\\\">Submit</button>\\n    <button (click)=\\\"btnCancel($event)\\\"  class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px;\\\">Cancel</button>\\n\\n\\n<form>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute,Router } from '@angular/router';\n//import { EmployeeService} from '../service/employee.service';\nimport {IEmployee, Employee} from '../service/employee.model';\nimport { Http } from '@angular/http';\n\n@Component({\n  selector: 'app-employee-edit',\n  templateUrl: './employee-edit.component.html',\n  styleUrls: ['./employee-edit.component.css']\n})\nexport class EmployeeEditComponent implements OnInit {\n\n \n  id:number;\n  \n  model=new Employee();\n  \n    constructor(private _httpService: Http, private route:ActivatedRoute,private router:Router) { \n    this.id=this.route.snapshot.params['id'];\n  }\n  \n  ngOnInit() {\n    \n\n      this._httpService.get('/api/values' + '/' + this.id).subscribe(values => {\r\n          this.model = values.json() as Employee;\r\n      });\n\n  }\n\n\n    onSubmit(form: any) {\n        this._httpService.put('/api/values' + '/' + this.id,this.model).subscribe();\n        this.router.navigate(['/employee-list']);\n  }\n    \n  btnCancel(event :Event){\n    //form.reset();\n    event.preventDefault();\n    this.router.navigate(['/employee-list']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h3 style=\\\"text-align:center;\\\">\\n  Employee-Data\\n</h3>\\n<!--<ul>\\r\\n  <li *ngFor=\\\"let value of empData\\\">{{value}}</li>\\r\\n</ul>-->\\n\\n<br>\\n<table class='table' >\\n<thead>\\n<tr>\\n      <th> Firstname</th>\\n      <th> Lastname</th>\\n      <th> Address</th>\\n      <th> Contact</th>\\n      <th> Gender</th>\\n</tr>\\n</thead>\\n<br>\\n      <tbody>\\n        <tr *ngFor='let emp of empData'>\\r\\n          <td>{{ emp.firstName }}</td>\\r\\n          <td>{{ emp.lastName }}</td>\\r\\n          <td>{{ emp.adress }}</td>\\r\\n          <td>{{ emp.contact }}</td>\\r\\n          <td>{{ emp.gender }}</td>\\r\\n          <td><button (click)=\\\"editEmployee(emp.id)\\\" class=\\\"btn btn-primary\\\">Edit</button></td>\\r\\n          <td><button (click)=\\\"deleteEmployee(emp.id)\\\" class=\\\"btn btn-danger\\\">Delete</button></td>\\r\\n        </tr>\\n      </tbody>\\n</table>     \\n\"","import { Component, OnInit,Input } from '@angular/core';\n//import { EmployeeService } from '../service/employee.service'\nimport { ActivatedRoute,Router } from '@angular/router';\nimport { IEmployee, Employee } from '../service/employee.model';\nimport { Http } from '@angular/http';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n    public empData: Employee[];\n  \n    constructor(private _httpService: Http,private route :Router) { }\n\n // @Input() empData: Employee[];\n  ngOnInit() {\n\n      this._httpService.get('/api/values').subscribe(values => {\r\n          this.empData = values.json() as Employee[];\r\n      });\n\n  }\n\n   \n\n  editEmployee(id){\n    this.route.navigate(['employee-edit/'+id]);\n  }\n\n  deleteEmployee(id){\n    var a =confirm(\"do you want to remove empoyee data  ??\");\n      if (a) {\n          this._httpService.delete('/api/values'+'/'+id).subscribe();\n      }\n    this.route.navigate(['/employee-list']);\n \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h3 style=\\\"text-align:center;\\\">\\n   Employee Management System\\n</h3>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n//port { EmployeeService } from '../service/employee.service'\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {IEmployee, Employee} from '../service/employee.model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  //public empData: Employee[];\n  ngOnInit() {\n    //this._employeeService.get().subscribe((data: any) => this.empData = data);\n  }\n\n}\n","export interface IEmployee{\r\n    \r\n        id:number;\r\n        firstName:string;\r\n        lastName: string;\r\n        adress: string;\r\n        contact: string;\r\n        gender: string;\r\n      \r\n}\r\n\r\n\r\nexport class Employee implements IEmployee{\r\n    constructor(    \r\n    ) { }\r\n   \r\n     public id:number;\r\n     public firstName:string;\r\n     public lastName:string;\r\n     public adress: string;\r\n     public contact: string;\r\n     public gender: string;\r\n    \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}